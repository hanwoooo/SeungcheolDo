import React, { useEffect, useState } from "react";
import { View, Text, FlatList, StyleSheet } from "react-native";
import { getStationList, searchStation } from "@/api/auth";
import SearchInput from "@/components/SearchInput";
import StationItem from "@/components/StationItem";
import { Stationlist } from "@/types/domain";

const BookMarkScreen = () => {
  const [stationList, setStationList] = useState<Stationlist>([]);
  const [searchResult, setSearchResult] = useState<Stationlist>([]);
  const [searchText, setSearchText] = useState("");

  const fetchStations = async () => {
    try {
      const data = await getStationList();
      setStationList(data);
    } catch (error) {
      console.error("Failed to fetch station list:", error);
    }
  };

  const handleSearchSubmit = async () => {
    if (!searchText) return;
    try {
      const data = await searchStation({ stationInput: searchText });
      setSearchResult([data]);
    } catch (error) {
      console.error("Failed to search station:", error);
    }
  };

  useEffect(() => {
    fetchStations();
  }, []);

  return (
    <View style={styles.container}>
      <SearchInput
        value={searchText}
        onChangeText={setSearchText}
        placeholder="즐겨찾기에 추가할 역을 검색하세요."
        onSubmit={handleSearchSubmit}
      />

      {searchResult.length > 0 ? (
        <View>
          <Text style={styles.sectionTitle}>Search Result</Text>
          <FlatList
            data={searchResult}
            keyExtractor={(item) => item.stationName}
            renderItem={({ item }) => <StationItem stationName={item.stationName} />}
          />
        </View>
      ) : (
        <View>
          <Text style={styles.sectionTitle}>전체 역</Text>
          <FlatList
  data={stationList}
  keyExtractor={(item) => {
    console.log("Key Extractor Item:", item); // 추가된 디버깅 코드
    return item.stationName?.toString() || "unknown"; // stationName이 없는 경우 "unknown"
  }}
  renderItem={({ item }) => {
    console.log("Render Item:", item); // 추가된 디버깅 코드
    return (
      <StationItem
        stationName={item.stationName?.toString() || "Unnamed Station"} // stationName이 없는 경우 기본값
      />
    );
  }}
/>

        </View>
      )}
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    padding: 16,
    backgroundColor: "#fff",
  },
  sectionTitle: {
    fontSize: 18,
    fontWeight: "bold",
    marginVertical: 8,
  },
});

export default BookMarkScreen;
